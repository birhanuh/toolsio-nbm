version: '3.2'
services:
  redis: 
    image: redis
    networks: 
      - webnet
    # logging:
    #   driver: gcplogs
  db: 
    image: postgres
    volumes: 
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "3030:5432"
    networks: 
      - webnet
    environment: 
      POSTGRES_USER: toolsio
      POSTGRES_PASSWORD: toolsio
      POSTGRES_DB: toolsio
  web:
    image: toolsio-server
    #image: birham/toolsio-server:latest ## To use the image that's in docker cloud
    #ports:
    #  - "8080:8080" ## We don' need to open up our port to the word, ngix handles it
    networks:
      - webnet 
    environment: 
      NODE_ENV: production
      SERVER_PORT: 8080
      REDIS_HOST: redis
      SERVER_URL: ec2-34-238-246-184.compute-1.amazonaws.com ## Server path (e.g. for uploads folder location)
      #DB_HOST: db ## We would need this if we use env variables in Sequelize constructor instead of json
      JWTSECRET1: somesecretkeyforjsonwebtoken
      JWTSECRET2: somesecretkeyforjsonwebtokentwo
    volumes:
      #- .:/app  
      - app:/app ## To share volumes accross containers   
      - ./uploads:/app/uploads
    depends_on:
      - db
      - redis
    #command: "node dist/index.js"
    command: ["./wait-for-it.sh", "db:5432", "--", "node", "dist/index.js"]
    # logging:
    #   driver: gcplogs
  migration:
    build: .
    image: toolsio-server
    #image: birham/toolsio-server:latest
    networks:
      - webnet 
    environment: 
      NODE_ENV: production
    volumes:
      - type: volume
        source: app
        target: /app
        volume:
          nocopy: true
    links:
      - db
    depends_on:
      - db
      - web
    command: ["./wait-for-it.sh", "db:5432", "--", "npm", "run", "db:migrate"]
  nginx: 
    image: nginx
    networks:
      - webnet 
    volumes:
      - ./toolsio.template:/etc/nginx/conf.d/toolsio.template
      - ./uploads:/uploads
      - ~/ssl_cert/toolsio.crt:/etc/nginx/csr/toolsio.crt
      - ~/ssl_cert/toolsio.key:/etc/nginx/csr/toolsio.key
      #- /etc/letsencrypt/live/toolsio.com/fullchain.pem:/etc/letsencrypt/live/toolsio.com/fullchain.pem
      #- /etc/letsencrypt/live/toolsio.com/privkey.pem:/etc/letsencrypt/live/toolsio.com/privkey.pem
    ports:
      - "8080:80"
      - "4444:443" 
      #- "80:80" ## HTTP on vertual machine
      #- "443:443" ## HTTPS on vertual machine
    environment:
      - NGINX_HOST=toolsio.com
      - NGINX_PORT=80
    depends_on: 
      - web
    command: /bin/bash -c "envsubst '${http_upgrade} ${connection_upgrade}' < /etc/nginx/conf.d/toolsio.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"  
    #command: [nginx-debug, '-g', 'daemon off;'] # Run nginx in debug mode
    # logging:
    #   driver: gcplogs

volumes:
  app: 

networks:
  webnet: 


    