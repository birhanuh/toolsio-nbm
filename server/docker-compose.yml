version: '3'
services:
  redis: 
    image: redis
    networks: 
      - webnet
  db: 
    image: postgres
    volumes: 
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "3030:5432"
    networks: 
      - webnet
    environment: 
      POSTGRES_USER: toolsio
      POSTGRES_PASSWORD: toolsio
      POSTGRES_DB: toolsio
  web:
    image: toolsio-server
    #ports:
    #  - "8080:8080" # We don' need to open up our port to the word, ngix handles it
    networks:
      - webnet 
    environment: 
      NODE_ENV: production
      SERVER_PORT: 8080
      REDIS_HOST: redis
      #DB_HOST: db # We would need this if we use env variables in Sequelize constructor instead of json. 
    #volumes:
    #  - .:/app  
    depends_on:
      - db
      - redis
    #command: "node dist/index.js"
    command: ["./wait-for-it.sh", "db:5432", "--", "node", "dist/index.js"]
  migration:
    build: .
    image: toolsio-server
    networks:
      - webnet 
    environment: 
      NODE_ENV: production
    volumes:
      - .:/app
    links:
      - db
    depends_on:
      - db
      - web
    command: ["./wait-for-it.sh", "db:5432", "--", "npm", "run", "db:migrate"]
  nginx: 
    image: nginx
    networks:
      - webnet 
    volumes:
      - ./toolsio.template:/etc/nginx/conf.d/toolsio.template
    ports:
      - "8080:80"
    #environment:
    #  - NGINX_HOST=foobar.com
    #  - NGINX_PORT=80
    depends_on: 
      - web
    command: /bin/bash -c "envsubst < /etc/nginx/conf.d/toolsio.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"  
networks:
  webnet: 

    