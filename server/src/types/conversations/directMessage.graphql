type DirectMessage {
  id: Int!
  body: String
  isRead: Boolean!
  senderId: Int!
  receiverId: Int!
  createdAt: Date!
  user: User!
  uploadPath: String
  mimetype: String
}

type CreateDirectMessageResponse {
  success: Boolean!
  message: DirectMessage 
  errors: [Error!]
}

type DirectMessageUsers {
  user: User!
}

type DirectMessageUser {
  id: Int!
  first_name: String
  email: String!
}

type UnreadDirectMessagesCount {
  count: Int!
}

type UnreadDirectMessagesCountSender {
  count: Int!
  sender_id: Int!
}

type UnreadDirectMessagesCountResponse {
  success: Boolean!
  unreadDirectMessagesCountSender: [UnreadDirectMessagesCountSender!]
  errors: [Error!]
}

type MarkDirectMessageAsReadResponse {
  success: Boolean!
  errors: [Error!]
}

type Query {
  getDirectMessage(id: Int!): DirectMessage
  
  getDirectMessages(cursor: String, receiverId: Int!): [DirectMessage!]!
  
  getDirectMessageUsers: [DirectMessageUser!]!

  getInboxDirectMessages: [DirectMessage!]!

  getSentDirectMessages: [DirectMessage!]!
  
  getUnreadDirectMessagesCount: UnreadDirectMessagesCount!

  getUnreadDirectMessagesCountSender: UnreadDirectMessagesCountResponse!
}

type Mutation {
  createDirectMessage(body: String, file: Upload, receiverId: Int!): CreateDirectMessageResponse!

  markDirectMessagesAsRead(senderId: Int): MarkDirectMessageAsReadResponse!
}

type Subscription {
  getNewDirectMessage(receiverId: Int!): DirectMessage!
}
