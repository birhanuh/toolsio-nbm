type User {
  id: Int!
  firstName: String
  lastName: String 
  email: String!
  password: String! 
  avatarUrl: String
  isConfirmed: Boolean!
  isAdmin: Boolean!
}

type GetUsersResponse {
  id: Int!
  firstName: String
  lastName: String
  email: String!
  avatarUrl: String
  isConfirmed: Boolean!
}

type UpdateResponse {
  success: Boolean!
  user: User
  errors: [Error!]
}

type S3SignAvatarResponse {
  signedRequest: String!
  url: String!
  errors: [Error!]
}

type Query {
  getCurrentUser: User!

  getUser(id: Int!): User!

  getUserByEmail(email: String!): User!

  getUsers: [GetUsersResponse!]!
}

type Mutation {
  updateUser(firstName: String, lastName: String, email: String!, password: String, 
    avatarUrl: String): UpdateResponse!

  updateUserPassword(currentPassword: String, newPassword: String): UpdateResponse!

  s3SignAvatar(fileName: String!, fileType: String!): S3SignAvatarResponse!
}

